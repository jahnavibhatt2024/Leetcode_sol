class Solution {
public:
 vector<int>mergeTwoSortedArray(vector<int>&left,vector<int>&right){
     int i =0;
     int j =0;
     vector<int>ans;
     while(i<left.size() && j<right.size()){
         if(left[i]<right[j]){
             ans.push_back(left[i]);
             i++;
         }
         else{
             ans.push_back(right[j]);
             j++;
         }
     }
     while(i<left.size()){
         ans.push_back(left[i]);
         i++;
     }
     while(j<right.size()){
         ans.push_back(right[j]);
         j++;
     }
     return ans;

 }
    vector<int> sortArray(vector<int>& nums) {
        int n = nums.size();
        //base case 
        if(n == 1) return nums;
        vector<int>left(nums.begin(),nums.begin()+n/2);
        vector<int>right(nums.begin()+n/2,nums.end());
        left = sortArray(left);
        right= sortArray(right);
        //now we have to use the concept of merge two sorted array concept 
        return mergeTwoSortedArray(left,right);
    }
};
